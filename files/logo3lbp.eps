%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 12.0.1%%For: (Diane) (GELUCK-SUYKENS EN PARTNERS)%%Title: (logo ulb 3 lignes \(petit bord perdu\).eps)%%CreationDate: 13/10/09 16:31%%BoundingBox: 306 100 410 137%%HiResBoundingBox: 306.876 100.0039 409.3081 136.3467%%DocumentProcessColors: Cyan Magenta Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKCustomColor: 1 1 1 1 ([Rep\616rage])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 297.5 421.5 297.5%AI3_TileBox: 7.2002 7.2002 834.7998 587.7998%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 842 595%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -531 824 1 1908 1064 26 0 0 6 73 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 -0.275391%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 48 8%%BeginData: 9336 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C450D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D060706075AFD52FF0607060706070607%060706070607060706070607060706070607060706070607060706070607%060706070607065AFD52FF07060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D060753FD52FF%060706070607060706070607060706070607060706070607060706070607%0607060706070607060706070607065AFD52FF07060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D060753FD52FF06070607060706070607060706070607060706070607%06070607060706070607060706070607060706070607065AFD52FF0D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060759FD41FFA82F59FD0EFF0607060706070607%060706070607060706070607060706070607060706070607060706070607%060706070607065AFD06FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFA8FFFFFFA8AFFD06FFA8A9FD04FFA8FFFFFFA8%FFA8AFA8FFFF5329A9FD0EFF0D0607060D0607060D0607060D0607060D06%07060D0607060D0607060D0607060D0607060D0607060D060706075AFD06%FF5A5AFFA92FFFFFFF542FFFA854FFFFFF54A8FF595AFFFF7E54FFFF532F%2F54FFFFA92F292F7EFFFFFF532F075AFFFFAF2FA8FF7EFD042FFFFF5A07%542FFD0EFF06070607060706070607060706070607060706070607060706%07060706070607060706070607060706070607065AFD06FF2954FFFF06FF%FFFF2907A8A906FFFFFF06A9FF8406FFFF2F2FFFFF2F59FFA8FFFFA906A9%5307FFFF7E07A8AF7EFFFFFF06A9FFFFA82F59FFFFFF2953FD10FF07060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D060753FD06FF2F53FFAF2FA9FFFF53065AA92FFF%FFFF2FA8FFFF2F7EFF07A9FFFF2F7EFD04FFA82FFFA906FFFF7E0684FD05%FF0DA8FFFFFF2FA8FFFFFF5353FD10FF0607060706070607060706070607%060706070607060706070607060706070607060706070607060706070607%065AFD06FF2953FFFF06FFFFFF295A067E29FFFFFF06A8FFFF2F537E2FFF%FFFF2F062F7EFFFFA9062F0653FFFFFF53060759FFFFFF06A8FFFFFF2F7E%FFFFFF2F07065AFD0EFF07060D0607060D0607060D0607060D0607060D06%07060D0607060D0607060D0607060D0607060D0607060D060753FD06FF2F%53FFFF2FA9FFFF2F7E7E072FFFFFFF2FA8FFFFA9075453FFFFFF2F7EFD04%FFA82F2F2FFD06FF5A07A8FFFF2FA8FFFFFF2FA8FFFFFF5453FD10FF0607%060706070607060706070607060706070607060706070607060706070607%060706070607060706070607065AFD06FF2F2FFFA906FFFFFF077EA80706%FFFFFF07A8FFFFFF0706A9FFFFFF2F7EFD04FFA906FF075AFFFFA8FFFFFF%06A8FFFF06A9FFFFFF2F7EFFFFFF295AFD10FF0D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060759FD06FFA9072F065AFFFFFF2F5AFF2F2FFFFFFF2FA8FFFFFF2F%07FD04FFFD042FA8FFA807FFA906A9FF7E0753065AFFFFA92FA8FFFFFF2F%84FFFFFF53062F2FA9FD0DFF060706070607060606070607060706060607%0606060706060607060706070606060706060607060706070607065AFD07%FFA97EA8FD04FF7EAFFFFF7EFFFFFF7EFD05FFA8FD04FFA87E847EFFFFFF%7EFFFFA8A8FFA8A85984FD04FF7EFD04FFA9A8FFFFFFA87E7E84A8FD0DFF%0D0607060D072F072F072F062F072F072F070D072F072F072F0707060D07%2F072F072F072F0707060D060706075AFD52FF0607060706A9FFFFA8FFA8%0753FFA9FFFF542FFFA8FFA9FFA92F0607067EFFFFA8FFA9FFA8FF7E0706%070607065AFD52FF07060D0607A8FD05FF065AFD04FF5353FD06FF2F0706%077EFD09FFA807060D060753FD52FF06070607060753FFFFA90607067EFF%A92907062FA8FFFF7E0607060706072FFFFFFF2F2F7EFFFFFF2F06060706%5AFD52FF07060D0607065AFFFFA80D060753FFA807060D06A9FFFF530706%0D0607062FFFFFFF2F062FFFFFFF5A060D060753FD21FFAFFD30FF060706%0706062FFFFFA90607065AFFA906070607A8FFFF5A06070607060706FFFF%FF070629FFFFFF29070607065AFD06FF535AFD04FF537EFFFF7E2F292F7E%FFFFFF072F075AFFFFFF53062F2FFD2FFF0D0607060D0654FFFFA8070607%59FFA80D060706AFFFFF53070607060D062FFFFFFF7E53AFFFFF7E070607%060759FD06FF2F53FD04FF2F53FFFF7E07FF2F07FFFFAF077E7E06AFFFFF%2F7EA9FD30FF0607060706072FFFFFA90607065AFFA906070607A8FFFF5A%06070607060706FD07FFA80706070607065AFD06FF2954FD04FF2F5AFFFF%592FFF7E29FFFFFF06A9A807A8FFFF2F5AFFA8FD2FFF0D0607060D065AFF%FFA80706075AFFA82F060706FFFFFF53070607060D062FFFFFFFA97EFFFF%FFA82F060706075AFD06FF5453FD04FF545AFFFF7E062F067EFFFFFF2F07%2F53FFFFFF2F2F0784FD2FFF0607060706072FFFFFA90607065AFFA90607%0607A8FFFF5A0607062F060707FFFFFF290606FFFFFF59070607065AFD06%FF295AFD04FF2F5AFFFF592FA9A906A9FFFF062F06FD04FF2F53FFA9FD2F%FF07060D0607065AFFFFA80D060753FFA807060706A9FFFF5907062F842F%062FFFFFFF2F06077EFFFFA90607060753FD06FF2F53FD04FF545AFFFF7E%2FFFA80784FFA92FA9532FFFFFFF297EFD31FF0607060706062FFFFFFF06%06067EFFA906070607A8FFFF5A010D7E84070606FFFFFF060606A8FFFFA8%070607065AFD06FF2F07292FAFFF297EFFFF590729072FFFFFFF06A9A807%7EFFFF2F062F29A9FD2EFF07060D0607062FFFFFFFA92F7EFFFF7E07062F%2FFFFFFF7E5AA8FFA92F297EFFFFFF7E5384FFFFFF7E060D060753FD07FF%84A9A8FFFFFFA9FFFFFFA8A9A8FD04FFAFFFFFA8FFFFFFA8A984A9FD2FFF%06070607060706A9FD07FF2F060653FD09FF297EFD09FFA806070607065A%FD52FF0D0607060D060706A9FD04FFA82F060D0653A8AFA8A9A8AFA8A9A8%2F53FFA8AFA8A9A8AFA85A06070607060759FD52FF060706070607060606%2F2F2F290706070607060706070607060706070607060706070607060706%0706070607065AFD52FF0D0607060D0607060D060706070607060D060706%0D0607060D0607060D0607060D0607060D0607060D060706075AFD52FF06%070607060706070607060706070607060706070607060706070607060706%07060706070607060706070607065AFD06FFA8FFA8FD05FFA8FFA8FD07FF%A9A9A8FD05FFA8A9FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA8AFA8%FFFFFFA9FD05FFA8FD05FFA8A9A8FD04FFA9A8FF07060D0607060D060706%0D0607060D0607060D0607060D0607060D0607060D0607060D0607060D06%07060D060753FD06FF5A062F2FFD04FF2F072F53FD05FFAF2F292F2FFFFF%FF532F072FA9FFFF5453FFFF2FA9FF7E2FFFA907FFFFFF072F077EFFFF53%5AFD04FF535AFD04FF2F2F2953FFFFFF2F072F5306070607060706070607%060706070607060706070607060706070607060706070607060706070607%06070607065AFD06FF2953FF2F07FFFFFF06A9FD08FF06A97E0659FFFF2F%2FFF0653FFFF2953FFFF06FFFFFF065A065AFFFF7E07A8FFA8FFFF5329FD%04FF2F2FFD04FF2F59FFA9FFFF5A06FFA8A807060D0607060D0607060D06%07060D0607060D0607060D0607060D0607060D0607060D0607060D060706%0D060753FD06FF5353FFA90DA8FFFF2F84FD07FFA92FA8AF07A9FFFF2F5A%FF2F2FFFFF5353FFFF2FA9FFFFA9062FFFFFFFAF07A9A8FFFFFF5354FD04%FF2F5AFD04FF2F7EA9FFFFFF5A077EFFFF06070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07065AFD06FF2F53FFFF06A8FFFF060706A9FD06FF062F062FFFFFFF5306%2F07A9FFFF2F53FFFF06FD04FF0729FFFFFFA807062FA8FFFF5329FD04FF%2F53FD04FF2F062F7EFFFFFF2F07067E0D0607060D0607060D0607060D06%07060D0607060D0607060D0607060D0607060D0607060D0607060D060706%0759FD06FF5353FFA90DA8FFA92F84FD08FF0D7EFF2F5AFFFF2F2F067EFF%FFFF5353FFA92FA9FFFF7E072F84FFFFA906FD05FF532FFD04FF2F5AFD04%FF2F7EFD07FF5A0606070607060706070607060706070607060706070607%06070607060706070607060706070607060706070607065AFD06FF2953FF%5306FFFFFF06A9FD08FF06A9FF2F2FFFFF2F53A806AFFFFF292FFF8406FF%FFAF06A9532FFFFFA807A8FD04FF5329FFA9FFFF2F2FFD04FF2F7EFD04FF%A9A8FF7E060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D060706075AFD06FF5A072F07A9FF%FFFFFD042FFD06FF2F292F07A9FFFF2F5AFF5353FFFFA9072F067EFFFF53%2FFFFF06A9FFAF062F2F5AFFFF5A0D2F53A9FF532F2F53FFFF2F2F2F54FF%FF592F2F2F59060706070607060706070607060706070607060706070607%0607060706070607060706070607060706070607065AFD06FFA8A984FD05%FFA8A984A9FD06FFA8A87EFD05FFA8FFA8A9FFFFFFAF7EA8FFFFFFA9A8FF%FFA9A8FFFFA984A9A8FFFFFFA8A884FFFFFFA8A9A8FFFFFFA8A884FFFFFF%7E84A8FF07060D0607060D0607060D0607060D0607060D0607060D060706%0D0607060D0607060D0607060D0607060D060753FD52FF06070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607065AFD52FF07060D0607060D0607060D0607060D060706%0D0607060D0607060D0607060D0607060D0607060D0607060D060753FD52%FF0607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607065AFD52FF07060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060753FD52FF537E535A537E535A537E535A537E535A537E535A53%7E535A537E535A537E535A537E535A537E535A537E535A53A8FD51FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Vectorisation) (Vectorisation.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (D\216grad\216s.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Module externe Forme calligraphique Adobe) (Forme calligraphique.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Halo.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Symbolisme Adobe) (Symbolisme.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Module externe Adobe Enveloppe) (Enveloppe et d\216formation.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forme compos\216e Adobe) (Extension Pathfinder.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Module externe Peinture dynamique d'Adobe) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Rep\616rage]) 0 Xs([Rep\616rage])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Calque 1) Ln0 Auu0 O1 0.68 0 0.12 k0 J 0 j 1 w 4 M []0 d0 XR306.876 136.3467 m343.2202 136.3467 L343.2202 100.0039 L306.876 100.0039 l306.876 136.3467 LfUq306.876 100.0039 m343.2202 100.0039 L343.2202 136.3467 L306.876 136.3467 l306.876 100.0039 LhWn0 O1 0.68 0 0.12 k306.876 136.3467 m343.2202 136.3467 L343.2202 100.0039 L306.876 100.0039 l306.876 136.3467 LfQ0 A0 O0.35 0.2 0 0 k0 J 0 j 1 w 4 M []0 d0 XR326.7759 114.3643 m329.4668 114.3643 L329.4668 117.0547 L326.7759 114.3643 LF0 0 0 0 k321.7988 123.3027 m321.7988 121.7139 L323.0698 121.7139 L323.0698 114.3037 L321.7988 114.3037 L321.7988 112.7148 L329.4668 112.7148 L329.4668 114.3643 L325.5928 114.3643 L325.5928 121.7139 L327.0029 121.7139 L327.0029 123.3027 L321.7988 123.3027 LF318.3599 113.1211 m319.3071 113.8857 319.5122 114.7324 319.5122 116.0107 C319.5098 121.6826 L320.8428 121.6846 L320.8428 123.2744 L316.9282 123.2725 L316.9282 121.6826 L317.7642 121.6846 L317.7642 115.7432 l317.7642 114.9092 317.085 114.2363 316.252 114.2354 c315.1631 114.2344 314.7432 114.9111 314.7432 115.7441 C314.7432 121.6855 L315.6182 121.6846 L315.6899 123.2744 L311.042 123.2744 L310.9702 121.6846 L312.2158 121.6846 L312.2212 116.1416 l312.2212 114.9941 312.2422 114.333 312.8501 113.4932 c313.395 112.7383 314.3438 112.3701 315.8608 112.373 c316.9282 112.376 317.7607 112.6367 318.3599 113.1211 CF*u1 D335.27 114.3633 m336.3491 114.3682 336.8389 114.9014 336.8418 115.8428 c336.8452 116.8145 336.1909 117.4824 335.2661 117.4844 C334.2588 117.4834 L334.2607 114.3633 L335.27 114.3633 LF335.1382 119.0137 m336 119.0107 336.4819 119.5234 336.4839 120.3418 c336.4868 121.1855 335.9399 121.7129 335.1357 121.7148 C334.2607 121.7139 L334.2607 119.0117 L335.1382 119.0137 Lf0 D338.2881 118.0342 m339.0259 117.5215 339.5098 116.6797 339.5151 115.665 c339.5229 114.0752 337.917 112.7139 336.4351 112.7158 C330.4678 112.7148 L330.4658 114.3643 L331.6782 114.3643 L331.6782 121.7139 L330.4072 121.7139 L330.4072 123.3027 L336.4458 123.3027 l337.9292 123.3027 339.1318 122.1465 339.1318 120.7002 c339.1318 120.0439 338.8052 119.2715 338.2842 118.793 C337.5708 118.3477 L338.2881 118.0342 Lf*Uuu*u1 0.68 0 0.12 k352.1626 125.2793 m351.8921 124.9473 351.4512 124.6533 350.6313 124.6533 c349.8267 124.6533 349.293 124.9082 349.0225 125.3955 c348.8833 125.6436 348.8521 125.79 348.8521 126.3467 c348.8521 130.0674 L349.6025 130.0674 L349.6025 126.625 L349.6025 126.2383 349.6411 125.7666 349.7959 125.5889 c349.9429 125.4189 350.2134 125.2871 350.6392 125.2871 c351.041 125.2871 351.335 125.4111 351.5054 125.6357 c351.6367 125.8057 351.6987 126.0918 351.6987 126.5176 c351.6987 130.0674 L352.4414 130.0674 L352.4414 126.4092 l352.4414 125.7363 352.4023 125.5732 352.1626 125.2793 cf*UUu*u357.9233 124.7383 m356.5234 127.5693 L356.2529 128.1182 355.9741 128.7217 355.8735 129.0303 c355.8271 129.0225 L355.8657 128.5664 355.8813 128.0332 355.8892 127.5381 c355.9199 124.7383 L355.1699 124.7383 L355.1699 130.0674 L356.0361 130.0674 L357.521 127.1279 L357.7456 126.6875 358.0083 125.999 358.0474 125.8516 c358.0938 125.8672 L358.0781 126.0225 358.0161 126.8652 358.0161 127.4531 c358.001 130.0674 L358.7202 130.0674 L358.7202 124.7383 L357.9233 124.7383 lf*UUu*u361.4199 124.7383 m361.4199 130.0674 L362.1777 130.0674 L362.1777 124.7383 L361.4199 124.7383 lf*UUu*u366.5713 124.7227 m365.8442 124.7227 L364.0649 130.0674 L364.8848 130.0674 L365.9058 126.8809 L365.9678 126.6953 366.0527 126.4092 366.1069 126.1768 c366.1455 126.0068 366.1768 125.8828 366.1924 125.7744 c366.2388 125.7744 L366.2617 125.8828 366.293 125.9834 366.3467 126.1768 c366.4087 126.3936 366.4707 126.5947 366.5635 126.8887 c367.6074 130.0674 L368.3813 130.0674 L366.5713 124.7227 lf*UUu*u370.3232 124.7383 m370.3232 130.0674 L373.2236 130.0674 L373.123 129.4561 L371.0732 129.4561 L371.0732 127.832 L372.7905 127.832 L372.7905 127.2051 L371.0811 127.2051 L371.0811 125.3799 L373.3086 125.3799 L373.3086 124.7383 L370.3232 124.7383 lf*UUu*u378.25 124.7383 m378.0952 125.04 378.0254 125.1641 377.8091 125.5273 c377.3989 126.208 377.2676 126.4316 376.8887 126.8574 c376.749 127.0117 376.6333 127.0898 376.4087 127.0967 c376.4087 124.7383 L375.6665 124.7383 L375.6665 130.0674 L377.1592 130.0674 L377.7935 130.0674 378.1646 129.9199 378.4199 129.6807 c378.6597 129.4561 378.8921 129.1006 378.8921 128.582 c378.8921 127.7549 378.3579 127.0898 377.4688 127.1201 c377.7163 126.9189 377.8398 126.749 377.9326 126.625 c378.041 126.4785 378.2036 126.2461 378.3813 125.9678 c378.6133 125.6045 379.0464 124.9082 379.1548 124.7383 C378.25 124.7383 lf1 D377.6157 129.3555 m377.4609 129.417 377.2441 129.4561 376.9658 129.4561 c376.4087 129.4561 L376.4087 127.5996 L376.9272 127.5996 L377.3989 127.5996 377.6621 127.6768 377.8477 127.8555 c378.0103 128.0098 378.1108 128.2646 378.1108 128.5742 c378.1108 128.9453 377.9097 129.2393 377.6157 129.3555 cf*UUu*u0 D382.6035 124.6377 m381.9927 124.6377 381.4048 124.792 380.8862 125.1094 c381.1802 125.6816 L381.6445 125.3955 382.0854 125.2412 382.6191 125.2412 c383.3154 125.2412 383.7715 125.5967 383.7715 126.1689 c383.7715 126.6025 383.4854 126.9033 382.8896 127.0742 c382.333 127.2363 L381.5283 127.4688 381.0723 127.8555 381.0723 128.6133 c381.0723 129.5332 381.7837 130.1602 382.8354 130.1602 c383.4233 130.1602 383.9961 129.9893 384.4678 129.6572 c384.1353 129.1309 L383.6401 129.4326 383.3076 129.5488 382.8667 129.5488 c382.271 129.5488 381.8999 129.2393 381.8999 128.7441 c381.8999 128.3652 382.1162 128.1494 382.6885 127.9785 c383.3154 127.793 L384.0269 127.584 384.6147 127.1201 384.6147 126.293 c384.6147 125.5508 384.0034 124.6377 382.6035 124.6377 cf*UUu*u386.958 124.7383 m386.958 130.0674 L387.7158 130.0674 L387.7158 124.7383 L386.958 124.7383 lf*UUu*u393.231 129.4482 m391.8462 129.4482 L391.8462 124.7383 L391.1113 124.7383 L391.1113 129.4482 L389.7271 129.4482 L389.7271 130.0674 L393.3081 130.0674 L393.231 129.4482 lf*UUu*u395.2886 124.7383 m395.2886 130.0674 L398.189 130.0674 L398.0884 129.4561 L396.0386 129.4561 L396.0386 127.832 L397.7559 127.832 L397.7559 127.2051 L396.0464 127.2051 L396.0464 125.3799 L398.2739 125.3799 L398.2739 124.7383 L395.2886 124.7383 lf396.1548 130.3301 m395.9307 130.748 L397.4854 131.7764 L397.833 131.1191 L396.1548 130.3301 lf*UUu*u351.5439 114.7939 m348.8833 114.7939 L348.8833 120.123 L349.6411 120.123 L349.6411 115.4131 L351.668 115.4131 L351.5439 114.7939 lf*UUu*u353.6245 114.7939 m353.6245 120.123 L354.3823 120.123 L354.3823 114.7939 L353.6245 114.7939 lf*UUu*u359.542 114.8789 m359.3022 114.8174 358.9775 114.7939 358.6987 114.7939 c357.0747 114.7939 L357.0747 120.123 L358.2041 120.123 L359.1011 120.123 359.3408 120.0996 359.6733 119.9219 c360.1455 119.6738 360.3931 119.2949 360.3931 118.8076 c360.3931 118.251 360.0757 117.8252 359.4258 117.6318 c360.2305 117.4541 360.6172 116.9521 360.6172 116.2559 c360.6172 115.5137 360.1606 115.041 359.542 114.8789 cf1 D359.0703 119.4424 m358.9463 119.4805 358.7993 119.4961 358.5288 119.4961 c357.8018 119.4961 L357.8018 117.8721 L358.6445 117.8721 L359.1167 117.8721 359.2788 117.957 359.4336 118.166 c359.5342 118.3047 359.5884 118.5059 359.5884 118.6846 c359.5884 119.0557 359.3794 119.3496 359.0703 119.4424 cf359.2251 117.207 m359.0854 117.2383 358.9312 117.2529 358.668 117.2529 c357.8096 117.2529 L357.8096 115.3975 L358.8613 115.3975 L359.3022 115.3975 359.7974 115.6602 359.7974 116.3408 c359.7974 116.7734 359.5576 117.1299 359.2251 117.207 cf*UUu*u0 D365.5518 114.7939 m365.397 115.0957 365.3271 115.2197 365.1108 115.583 c364.7007 116.2637 364.5693 116.4873 364.1904 116.9131 c364.0508 117.0674 363.9351 117.1455 363.7104 117.1523 c363.7104 114.7939 L362.9683 114.7939 L362.9683 120.123 L364.4609 120.123 L365.0952 120.123 365.4663 119.9756 365.7217 119.7363 c365.9614 119.5117 366.1938 119.1563 366.1938 118.6377 c366.1938 117.8105 365.6597 117.1455 364.7705 117.1758 c365.0181 116.9746 365.1416 116.8047 365.2344 116.6807 c365.3428 116.5342 365.5054 116.3018 365.6831 116.0234 c365.915 115.6602 366.3481 114.9639 366.4565 114.7939 C365.5518 114.7939 lf1 D364.9175 119.4111 m364.7627 119.4727 364.5459 119.5117 364.2676 119.5117 c363.7104 119.5117 L363.7104 117.6553 L364.229 117.6553 L364.7007 117.6553 364.9639 117.7324 365.1494 117.9111 c365.312 118.0654 365.4126 118.3203 365.4126 118.6299 c365.4126 119.001 365.2114 119.2949 364.9175 119.4111 cf*UUu*u0 D368.7388 114.7939 m368.7388 120.123 L371.6392 120.123 L371.5386 119.5117 L369.4888 119.5117 L369.4888 117.8877 L371.2061 117.8877 L371.2061 117.2607 L369.4966 117.2607 L369.4966 115.4355 L371.7241 115.4355 L371.7241 114.7939 L368.7388 114.7939 lf*UUu*u352.0083 105.5693 m351.6367 105.1045 351.1416 104.8496 350.2134 104.8496 c348.8833 104.8496 L348.8833 110.1787 L350.1206 110.1787 L351.041 110.1787 351.6289 109.9697 352.1162 109.2969 c352.4336 108.8555 352.5884 108.2451 352.5884 107.5098 c352.5884 106.6436 352.3638 106.0098 352.0083 105.5693 cf1 D351.3662 109.1113 m351.0723 109.4824 350.7627 109.583 350.2446 109.583 c349.6411 109.583 L349.6411 105.4609 L350.229 105.4609 L350.8403 105.4609 351.2344 105.623 351.4746 106.0557 c351.668 106.4121 351.7607 106.8916 351.7607 107.417 c351.7607 108.1602 351.6831 108.709 351.3662 109.1113 cf*UUu*u0 D354.9341 104.8496 m354.9341 110.1787 L357.8345 110.1787 L357.7339 109.5674 L355.6841 109.5674 L355.6841 107.9434 L357.4014 107.9434 L357.4014 107.3164 L355.6919 107.3164 L355.6919 105.4912 L357.9194 105.4912 L357.9194 104.8496 L354.9341 104.8496 lf*UUu*u365.4561 104.9346 m365.2163 104.873 364.8916 104.8496 364.6128 104.8496 c362.9888 104.8496 L362.9888 110.1787 L364.1182 110.1787 L365.0151 110.1787 365.2549 110.1553 365.5874 109.9775 c366.0596 109.7295 366.3071 109.3506 366.3071 108.8633 c366.3071 108.3066 365.9897 107.8809 365.3398 107.6875 c366.1445 107.5098 366.5313 107.0078 366.5313 106.3115 c366.5313 105.5693 366.0747 105.0967 365.4561 104.9346 cf1 D364.9844 109.498 m364.8604 109.5361 364.7134 109.5518 364.4429 109.5518 c363.7158 109.5518 L363.7158 107.9277 L364.5586 107.9277 L365.0308 107.9277 365.1929 108.0127 365.3477 108.2217 c365.4482 108.3604 365.5024 108.5615 365.5024 108.7402 c365.5024 109.1113 365.2935 109.4053 364.9844 109.498 cf365.1392 107.2627 m364.9995 107.2939 364.8452 107.3086 364.582 107.3086 c363.7236 107.3086 L363.7236 105.4531 L364.7754 105.4531 L365.2163 105.4531 365.7114 105.7158 365.7114 106.3965 c365.7114 106.8291 365.4717 107.1855 365.1392 107.2627 cf*UUu*u0 D371.4663 104.8496 m371.3115 105.1514 371.2417 105.2754 371.0254 105.6387 c370.6152 106.3193 370.4839 106.543 370.105 106.9688 c369.9658 107.123 369.8496 107.2012 369.625 107.208 c369.625 104.8496 L368.8828 104.8496 L368.8828 110.1787 L370.3755 110.1787 L371.0098 110.1787 371.3809 110.0313 371.6362 109.792 c371.876 109.5674 372.1084 109.2119 372.1084 108.6934 c372.1084 107.8662 371.5742 107.2012 370.6851 107.2314 c370.9326 107.0303 371.0562 106.8604 371.1489 106.7363 c371.2573 106.5898 371.4199 106.3574 371.5977 106.0791 c371.8296 105.7158 372.2627 105.0195 372.3711 104.8496 C371.4663 104.8496 lf1 D370.832 109.4668 m370.6772 109.5283 370.4604 109.5674 370.1821 109.5674 c369.625 109.5674 L369.625 107.7109 L370.1436 107.7109 L370.6152 107.7109 370.8784 107.7881 371.064 107.9668 c371.2266 108.1211 371.3271 108.376 371.3271 108.6855 c371.3271 109.0566 371.126 109.3506 370.832 109.4668 cf*UUu*u0 D377.7632 105.3906 m377.4927 105.0586 377.0518 104.7646 376.2319 104.7646 c375.4272 104.7646 374.8936 105.0195 374.623 105.5068 c374.4839 105.7549 374.4526 105.9014 374.4526 106.458 c374.4526 110.1787 L375.2031 110.1787 L375.2031 106.7363 L375.2031 106.3496 375.2417 105.8779 375.3965 105.7002 c375.5435 105.5303 375.814 105.3984 376.2397 105.3984 c376.6416 105.3984 376.9355 105.5225 377.106 105.7471 c377.2373 105.917 377.2993 106.2031 377.2993 106.6289 c377.2993 110.1787 L378.042 110.1787 L378.042 106.5205 l378.042 105.8477 378.0029 105.6846 377.7632 105.3906 cf*UUu*u383.1724 104.8496 m381.9731 107.1387 L380.8208 104.8496 L379.9155 104.8496 L381.5244 107.7188 L380.1016 110.1787 L381.0063 110.1787 L381.9653 108.3682 L382.8784 110.1787 L383.7676 110.1787 L382.4219 107.7656 L384.0771 104.8496 L383.1724 104.8496 lf*UUu*u386.0801 104.8496 m386.0801 110.1787 L388.9805 110.1787 L388.8799 109.5674 L386.8301 109.5674 L386.8301 107.9434 L388.5474 107.9434 L388.5474 107.3164 L386.8379 107.3164 L386.8379 105.4912 L389.0654 105.4912 L389.0654 104.8496 L386.0801 104.8496 lf*UUu*u394.0391 104.8496 m391.3784 104.8496 L391.3784 110.1787 L392.1362 110.1787 L392.1362 105.4688 L394.1631 105.4688 L394.0391 104.8496 lf*UUu*u398.7505 104.8496 m396.0898 104.8496 L396.0898 110.1787 L396.8477 110.1787 L396.8477 105.4688 L398.8745 105.4688 L398.7505 104.8496 lf*UUu*u400.707 104.8496 m400.707 110.1787 L403.6074 110.1787 L403.5068 109.5674 L401.457 109.5674 L401.457 107.9434 L403.1743 107.9434 L403.1743 107.3164 L401.4648 107.3164 L401.4648 105.4912 L403.6924 105.4912 L403.6924 104.8496 L400.707 104.8496 lf*UUu*u407.2969 104.749 m406.686 104.749 406.0981 104.9033 405.5796 105.2207 c405.8735 105.793 L406.3379 105.5068 406.7788 105.3525 407.3125 105.3525 c408.0088 105.3525 408.4648 105.708 408.4648 106.2803 c408.4648 106.7139 408.1787 107.0146 407.583 107.1855 c407.0264 107.3477 L406.2217 107.5801 405.7656 107.9668 405.7656 108.7246 c405.7656 109.6445 406.4771 110.2715 407.5288 110.2715 c408.1167 110.2715 408.6895 110.1006 409.1611 109.7686 c408.8286 109.2422 L408.3335 109.5439 408.001 109.6602 407.5601 109.6602 c406.9644 109.6602 406.5933 109.3506 406.5933 108.8555 c406.5933 108.4766 406.8096 108.2607 407.3818 108.0898 c408.0088 107.9043 L408.7202 107.6953 409.3081 107.2314 409.3081 106.4043 c409.3081 105.6621 408.6968 104.749 407.2969 104.749 cf*UUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF