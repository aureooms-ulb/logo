%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 12.0.1%%For: (Diane) (GELUCK-SUYKENS EN PARTNERS)%%Title: (logo ulb 3 lignes \(grd\).eps)%%CreationDate: 13/10/09 16:30%%BoundingBox: 314 274 524 390%%HiResBoundingBox: 314.646 274.3066 523.2031 389.4399%%DocumentProcessColors: Cyan Magenta Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKCustomColor: 1 1 1 1 ([Rep\616rage])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 297.5 421.5 297.5%AI3_TileBox: 7.2002 7.2002 834.7998 587.7998%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 842 595%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -531 824 1 1908 1064 26 0 0 6 73 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 -0.275391%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 13522 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C450D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D062FFD39FF06070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060706070607060706070607060706070607060729FD39%FF07060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607062FFD39FF060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060706070607060706070607060706070607060606FD39FF07%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607062FFD39FF0607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060707FD39FF0D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D062FFD39FF06070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060706070607060706070607060729FD39FF0D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D062FFD39FF060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060706070607060706070607060729FD39FF07060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607062FFD39FF0607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060606FD39FF07060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%062FFD39FF06070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060706070607060707FD39FF0D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D062F%FD39FF060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060706070607060729FD39FF0D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D062FFD39%FF0607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060729FD39FF07060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607062FFD39FF06%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060606FD39FF07060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607062FFD39FF060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060707FD39FF0D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D062FFD39FF0607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060729FD2DFFA85AA9FD09FF0D0607060D0607060D0607060D0607%060D060706070607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D062FFD04FFA8%FFFFA9FFFF7EFFA8FFFFA9A9FFA8FFA8A9FF8453A9FFFF5A84FFFFFF845A%FFFFA9A8FF7E7E7EFFFF2F07A9FD09FF0607060706070607597E7E7E597E%7E7E5A2F062FFD047E597E7E2F067E7E7E597E7E7E597E7E2F0607060706%2F7E7E597E7E7E597E7E7E597E5A2F0607060706070607060729FD04FF54%7EFF2FFFA8077E537EFF2FA8A82FFF5359FF297E7EFF7E2F2F5AFF5A297E%7EFF2F5AFF7E067EFF7E2FA8A8FD09FF07060D0607060707FD09FF07075A%FD07FF2F07FD0AFF2F07060D06072FFD0EFFA906070607060D0607062FFD%04FF5384AF54FFFF075453A9FF5AA8FF2FA92FFFFF2F7EFFFF84537E53FF%5A2F7EFFFF5A53FFFF53FFFF7E537EFD0AFF060706070607060DFD09FF2F%017EFD07FF2F06FD0AFF2F06070607062FFD0FFFA8060706070607060606%FD04FF5A7EFF29FFA8532F2FA8FF2FA8FF7E065AFFFF297EA8FF7E0D06FF%FFFFA82F53FF535AFFFF2FFFFF7E2FA8FD0AFF07060D0607060D077E7EFD%05FFA87E07072FA8AFFFFFAF7E840707537EA8FD04FFA9537E0707060D06%07077E5AFD05FF7E7E7EFD06FF5A0607060D0607062FFD04FF5A535354FF%FF2FAF06A9FF5A84FFA8077EFFFF2F7EA9FF845A7E53FF7EA8535AFF5A53%FFFF53AFFF7E5384FD0AFF0607060706070607060659FD04FF5306070607%06A9FFFF5A0606070606017EFD04FF530606070607060706070607A8FD04%FF2F010707FD05FF7E0706070607060707FD05FF595AA8FFA9A8FFA8A8FF%7EFFFFFF59FFFFFF7E7E7EFFA8A9A97EFFA8537EA8FF84A9FFFF7EFFFFFF%5A7E84FD09FF0D0607060D06070607067EFD04FF2F070607060DA8FFFF7E%0607060D06077EFD04FF7E0607060D0607060D060706AFFD04FF2F070607%5AFD04FFA906070607060D062FFD39FF060706070607060706077EFD04FF%530607060706A9FFFF590706070607067EFD04FF53070607060706070607%0607A8FD04FF2F0607015AFD04FF7E0606070607060729FD39FF0D060706%0D0607060D067EFD04FF53070607062FA8FFFF840607060D06077EFD04FF%7E0607060D0607060D060706FD05FF2F07060DA8FD04FF54060D0607060D%062FFD39FF060706070607060706077EFD04FF530607060706A9FFFF5907%06070607067EFD04FF530706070607060706070607A8FD04FF7E2F537EFD%04FFA8060706070607060729FD04FF7E7EFFFF7E7EFF7E2F2FFFFFA82953%A8FF842F2FA8FD20FF07060D0607060D0607067EFD04FF5307060D0607A8%FFFF7E060D060706077EFD04FF7E060D0607060D0607060706A9FD0BFF7E%06070607060D0607062FFD04FF537EFFFF5A7EFF7E5A5A53FF7E7E5954FF%7E2FFD22FF0607060706070607060659FD04FF530607060706A9FFFF7E06%06070607067EFD04FF530606070607060706070607A8FD0BFF7E2F060706%070607060606FD04FF5A7EFFFF7E53FF592F067EFF84072F59FF7E2F53FD%21FF07060D0607060D06070684FD04FF5307060D0607A8FFFF7E060D0607%060D7EFD04FF7E060D0607060D0607060D06AFFD04FFA8A984FD06FF2F06%07060D0607062FFD04FF5384FFFF5A7EFF7E7EA929FF7E2F2FFFFF7E53FD%22FF0607060706070607060659FD04FF540607060706A9FFFF7E06060706%07067EFD04FF530606070607062F06070607A8FD04FF2F060706A8FD04FF%A80706070607060707FD04FF7E295AFF7E5AFF592F2F5AFF7E7E7E2FFF7E%2F53A8FD20FF0D0607060D0607060D067EFD04FF2F070607060DA8FFFF7E%0607060D06077EFD04FF7E0607060D062F7E2F060706AFFD04FF2F070607%07FD05FF2F070607060D062FFD06FFA9FD05FFA8FD09FFA9A9A9FD20FF06%0706070607060706077EFD04FF530607060706A9FFFF590706070607067E%FD04FF53070607062F7E8406070607A8FD04FF2F060706077EFD04FF5A06%070607060729FD39FF0D0607060D0607060D067EFD04FF53070607060DA9%FFFF840607060D06077EFD04FF7E0607062F7EA97E2F060706FD05FF2F07%060D06A9FD04FF59070607060D062FFD39FF060706070607060706077EFD%04FF7E060706062FFFFFFF530706070607067EFD04FF5306060D7E857E7E%06070607A8FD04FF2F0606062FFD05FF5306070607060729FD05FF7EFFFF%FFA8A97EFD05FF7EA9FFFFA9A9A8FFFFFFA8FFA8FFA8FFFFA9FFFF7EA8A8%FFA8FFFFFFA8FFFFFFA8A97EFFFFFF7EAF07060D0607060D0607065AFD05%FF7E072F53FD04FF53060D0607072F7EFD04FF7E075484A97EA97E070653%2FFD05FF532F2F5AA9FD05FF0707060D0607062FFD04FF592F29A9FF8429%5AA8FFFFFF7E2F2F7EFFA929537EFF7E7EFF53FFA92F7E2FFF7E2F53A9FF%5A84FFFF5A7EFFFF7E297EFFFF2F5A530607060706070607060606FD07FF%A8FD04FFA90607060706FD0FFF062FFD10FF2F0706070607060606FD04FF%5A7EA906FF7E53A8FD04FF7E2F5A2FFF7E537E2FFF7E53FF2FFFFF5A06A9%FF7E2FA9FFFF2FA8FFFF537EFFFF5353A8FFA80759FF07060D0607060D06%07060753FD0BFF2F07060D062FFD0FFF072FFD0FFF53070607060D060706%2FFD04FF59A8FF2FFFA82F84FD04FF7E2F2F5AFFA9072FA8FF7E7EFF54A9%FF7E07AFFF7E2F7EFFFF5AA8FFFF5A7EFFFF7E2FA9FFFF7E532F06070607%060706070607060753FD08FFA806070607060706AFA9FFA9FFA8FFA9FFA8%FFA9FFA9FF062FA9FFA9FFA8FFA9FFA8FFA9FFA87E070606070607060706%0707FD04FF5A595A2FFF7E53FD05FF7E53A906FF84532F7EFF7E2FA929FF%A82F532FFF7E2FFFA8FF2F7EA8FF535AA8FF537EFFFFA8A9A8070D060706%0D0607060D06070607075A5A84847E59530607060D0607060D070D062F07%0D062F070D062F070D060D060D062F070D062F070D062F07070607060706%0D0607060D062FFD04FF7E5453FFFFA953547EFFFFFFA85A5384FFFF7EFF%53FFFF5A2984FFA87EFF59FFA85A53A8FF842F7EFFA92F5AFFA92F5AA8FF%2F537E060706070607060706070607060706060607060606070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060706070607060729FD19FFA9FD1FFF0D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%062FFD39FF06070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060706070607060729FD39FF07060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607062F%FD39FF060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060706070607060606FD39FF07060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607062FFD39%FF0607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060707FD39FF0D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D062FFD39FF06%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060729FD39FF0D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D062FFD39FF060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060729FD39FF07060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607062FFD39FF0607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060606FD39FF07060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607062FFD39FF06070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060707FD39FF0D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D062FFD39FF060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0729FD39FF0D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D062FFD39FF0607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060729%FD39FF07060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607062FFD39FF06070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060706070607060706070607060706070607060606FD39%FF07060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D0607062FFD39FF060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060706070607060706070607060706070607060606FD39FF2F%2F2F292F2F2F292F2F2F292F2F2F292F2F2F292F2F2F292F2F2F292F2F2F%292F2F2F292F2F2F292F2F2F292F2F2F292F2F2F292F2F2F292F2F2F292F%2F2F292F2F2F292F295AFDB8FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Vectorisation) (Vectorisation.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (D\216grad\216s.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Module externe Forme calligraphique Adobe) (Forme calligraphique.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Halo.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Symbolisme Adobe) (Symbolisme.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Module externe Adobe Enveloppe) (Enveloppe et d\216formation.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forme compos\216e Adobe) (Extension Pathfinder.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Module externe Peinture dynamique d'Adobe) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Rep\616rage]) 0 Xs([Rep\616rage])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Calque 1) Ln0 Auu0 O1 0.68 0 0.12 k0 J 0 j 1 w 4 M []0 d0 XR314.646 389.4399 m429.7783 389.4399 L429.7783 274.3066 L314.646 274.3066 l314.646 389.4399 LfUq314.646 274.3066 m429.7783 274.3066 L429.7783 389.4399 L314.646 389.4399 l314.646 274.3066 LhWn0 O1 0.68 0 0.12 k314.646 389.4399 m429.7783 389.4399 L429.7783 274.3066 L314.646 274.3066 l314.646 389.4399 LfQ0 A0 O0.35 0.2 0 0 k0 J 0 j 1 w 4 M []0 d0 XR377.689 319.7568 m386.2119 319.7568 L386.2119 328.2813 L377.689 319.7568 LF0 0 0 0 k361.9199 348.0771 m361.9199 343.042 L365.9482 343.042 L365.9482 319.5688 L361.9199 319.5688 L361.9199 314.5342 L386.2119 314.5342 L386.2119 319.7568 L373.9399 319.7568 L373.9399 343.042 L378.4082 343.042 L378.4082 348.0771 L361.9199 348.0771 LF351.0249 315.8188 m354.0249 318.2432 354.6768 320.9238 354.6748 324.9741 C354.6709 342.9448 L358.8911 342.9492 L358.8911 347.9839 L346.4902 347.98 L346.4902 342.9448 L349.1372 342.9492 L349.1372 324.125 l349.1372 321.4849 346.9868 319.3511 344.3472 319.3491 c340.896 319.3462 339.5669 321.4902 339.5669 324.1279 C339.5669 342.9531 L342.3398 342.9492 L342.5669 347.9839 L327.8408 347.9839 L327.6143 342.9492 L331.563 342.9492 L331.5791 325.3911 l331.5791 321.7549 331.646 319.6611 333.5698 316.998 c335.2969 314.6069 338.3042 313.4399 343.1079 313.4512 c346.4912 313.459 349.1279 314.2871 351.0249 315.8188 CF*u1 D404.5972 319.7539 m408.0151 319.77 409.5679 321.458 409.5771 324.4419 c409.5859 327.5181 407.5161 329.6338 404.585 329.6421 C401.396 329.6382 L401.3999 319.7539 L404.5972 319.7539 LF404.1802 334.4868 m406.9102 334.48 408.437 336.1011 408.4438 338.6958 c408.4521 341.3711 406.7212 343.0381 404.1719 343.0459 C401.3999 343.042 L401.3999 334.4839 L404.1802 334.4868 Lf0 D414.1602 331.3818 m416.4951 329.7588 418.0288 327.0938 418.0449 323.8799 c418.0708 318.8408 412.9829 314.5298 408.2891 314.5361 C389.3828 314.5342 L389.3799 319.7568 L393.2178 319.7568 L393.2178 343.042 L389.1909 343.042 L389.1909 348.0771 L408.3218 348.0771 l413.02 348.0771 416.832 344.4092 416.832 339.8291 c416.832 337.7529 415.7969 335.3018 414.147 333.7871 C411.8857 332.3799 L414.1602 331.3818 Lf*Uuu*u1 0.68 0 0.12 k442.4238 342.3613 m442.041 341.8916 441.418 341.4761 440.2588 341.4761 c439.1221 341.4761 438.3672 341.8369 437.9844 342.5254 c437.7881 342.8755 437.7441 343.083 437.7441 343.8701 c437.7441 349.1289 L438.8047 349.1289 L438.8047 344.2637 L438.8047 343.7173 438.8594 343.0503 439.0781 342.7988 c439.2861 342.5581 439.668 342.3726 440.2695 342.3726 c440.8389 342.3726 441.2539 342.5474 441.4941 342.8643 c441.6807 343.105 441.7676 343.5093 441.7676 344.1108 c441.7676 349.1289 L442.8174 349.1289 L442.8174 343.9575 l442.8174 343.0063 442.7627 342.7769 442.4238 342.3613 cf*UUu*u450.5674 341.5962 m448.5879 345.5977 L448.2051 346.374 447.8115 347.2266 447.6699 347.6641 c447.6035 347.6528 L447.6582 347.0078 447.6807 346.2534 447.6914 345.5537 c447.7354 341.5962 L446.6748 341.5962 L446.6748 349.1289 L447.8994 349.1289 L449.998 344.9746 L450.3154 344.3511 450.6875 343.3784 450.7422 343.1704 c450.8076 343.1924 L450.7861 343.4111 450.6982 344.6025 450.6982 345.4336 c450.6768 349.1289 L451.6934 349.1289 L451.6934 341.5962 L450.5674 341.5962 lf*UUu*u455.5098 341.5962 m455.5098 349.1289 L456.5811 349.1289 L456.5811 341.5962 L455.5098 341.5962 lf*UUu*u462.792 341.5742 m461.7637 341.5742 L459.249 349.1289 L460.4082 349.1289 L461.8516 344.6245 L461.9385 344.3623 462.0586 343.9575 462.1357 343.6299 c462.1904 343.3892 462.2344 343.2144 462.2559 343.061 c462.3213 343.061 L462.3545 343.2144 462.3984 343.3564 462.4746 343.6299 c462.5625 343.936 462.6494 344.2202 462.7803 344.6357 c464.2568 349.1289 L465.3506 349.1289 L462.792 341.5742 lf*UUu*u468.0947 341.5962 m468.0947 349.1289 L472.1943 349.1289 L472.0527 348.2651 L469.1553 348.2651 L469.1553 345.9692 L471.582 345.9692 L471.582 345.084 L469.166 345.084 L469.166 342.5034 L472.3154 342.5034 L472.3154 341.5962 L468.0947 341.5962 lf*UUu*u479.2998 341.5962 m479.0811 342.0225 478.9834 342.1973 478.6768 342.7114 c478.0977 343.6733 477.9111 343.9907 477.376 344.5918 c477.1787 344.8105 477.0146 344.9199 476.6982 344.9307 c476.6982 341.5962 L475.6484 341.5962 L475.6484 349.1289 L477.7588 349.1289 L478.6553 349.1289 479.1797 348.9214 479.541 348.5825 c479.8799 348.2651 480.208 347.7622 480.208 347.0298 c480.208 345.8599 479.4531 344.9199 478.1953 344.9634 c478.5459 344.6792 478.7207 344.439 478.8516 344.2637 c479.0049 344.0562 479.2344 343.728 479.4863 343.3345 c479.8145 342.8208 480.4268 341.8369 480.5791 341.5962 C479.2998 341.5962 lf1 D478.4033 348.123 m478.1846 348.2104 477.8789 348.2651 477.4854 348.2651 c476.6982 348.2651 L476.6982 345.6416 L477.4307 345.6416 L478.0977 345.6416 478.4688 345.7505 478.7314 346.002 c478.9609 346.2207 479.1035 346.5815 479.1035 347.019 c479.1035 347.5439 478.8193 347.959 478.4033 348.123 cf*UUu*u0 D485.4551 341.4541 m484.5908 341.4541 483.7598 341.6729 483.0273 342.1211 c483.4424 342.9302 L484.0986 342.5254 484.7217 342.3066 485.4766 342.3066 c486.4609 342.3066 487.1055 342.8096 487.1055 343.6187 c487.1055 344.231 486.7012 344.6572 485.8594 344.8979 c485.0723 345.1274 L483.9346 345.4556 483.29 346.002 483.29 347.0737 c483.29 348.3745 484.2959 349.2603 485.7822 349.2603 c486.6133 349.2603 487.4229 349.0195 488.0898 348.5493 c487.6191 347.8062 L486.9199 348.2324 486.4492 348.3965 485.8262 348.3965 c484.9844 348.3965 484.46 347.959 484.46 347.2593 c484.46 346.7236 484.7656 346.4175 485.5752 346.1772 c486.4609 345.9146 L487.4668 345.6196 488.2979 344.9634 488.2979 343.7939 c488.2979 342.7441 487.4336 341.4541 485.4551 341.4541 cf*UUu*u491.6094 341.5962 m491.6094 349.1289 L492.6807 349.1289 L492.6807 341.5962 L491.6094 341.5962 lf*UUu*u500.4766 348.2544 m498.5195 348.2544 L498.5195 341.5962 L497.4805 341.5962 L497.4805 348.2544 L495.5234 348.2544 L495.5234 349.1289 L500.5859 349.1289 L500.4766 348.2544 lf*UUu*u503.3857 341.5962 m503.3857 349.1289 L507.4854 349.1289 L507.3438 348.2651 L504.4463 348.2651 L504.4463 345.9692 L506.873 345.9692 L506.873 345.084 L504.457 345.084 L504.457 342.5034 L507.6064 342.5034 L507.6064 341.5962 L503.3857 341.5962 lf504.6104 349.5005 m504.293 350.0913 L506.4902 351.5449 L506.9824 350.6157 L504.6104 349.5005 lf*UUu*u441.5488 327.5396 m437.7881 327.5396 L437.7881 335.0723 L438.8594 335.0723 L438.8594 328.4141 L441.7236 328.4141 L441.5488 327.5396 lf*UUu*u444.4902 327.5396 m444.4902 335.0723 L445.5615 335.0723 L445.5615 327.5396 L444.4902 327.5396 lf*UUu*u452.8545 327.6597 m452.5156 327.5723 452.0566 327.5396 451.6631 327.5396 c449.3672 327.5396 L449.3672 335.0723 L450.9629 335.0723 L452.2314 335.0723 452.5703 335.0396 453.041 334.7881 c453.708 334.4385 454.0576 333.9023 454.0576 333.2139 c454.0576 332.4268 453.6094 331.8252 452.6904 331.5518 c453.8281 331.3003 454.375 330.5898 454.375 329.606 c454.375 328.5562 453.7295 327.8896 452.8545 327.6597 cf1 D452.1875 334.1104 m452.0127 334.165 451.8047 334.1865 451.4229 334.1865 c450.3945 334.1865 L450.3945 331.8906 L451.5869 331.8906 L452.2539 331.8906 452.4834 332.0112 452.7021 332.3062 c452.8438 332.5029 452.9209 332.7871 452.9209 333.0391 c452.9209 333.5635 452.625 333.979 452.1875 334.1104 cf452.4063 330.9507 m452.21 330.9941 451.9912 331.0161 451.6191 331.0161 c450.4053 331.0161 L450.4053 328.3921 L451.8926 328.3921 L452.5156 328.3921 453.2158 328.7642 453.2158 329.7261 c453.2158 330.3384 452.877 330.8413 452.4063 330.9507 cf*UUu*u0 D461.3496 327.5396 m461.1309 327.9658 461.0332 328.1406 460.7266 328.6548 c460.1475 329.6167 459.9609 329.9341 459.4258 330.5352 c459.2285 330.7539 459.0645 330.8633 458.748 330.874 c458.748 327.5396 L457.6982 327.5396 L457.6982 335.0723 L459.8086 335.0723 L460.7051 335.0723 461.2295 334.8647 461.5908 334.5259 c461.9297 334.2085 462.2578 333.7056 462.2578 332.9731 c462.2578 331.8032 461.5029 330.8633 460.2451 330.9067 c460.5957 330.6226 460.7705 330.3823 460.9014 330.207 c461.0547 329.9995 461.2842 329.6714 461.5361 329.2778 c461.8643 328.7642 462.4766 327.7803 462.6289 327.5396 C461.3496 327.5396 lf1 D460.4531 334.0664 m460.2344 334.1538 459.9287 334.2085 459.5352 334.2085 c458.748 334.2085 L458.748 331.585 L459.4805 331.585 L460.1475 331.585 460.5186 331.6938 460.7813 331.9453 c461.0107 332.1641 461.1533 332.5249 461.1533 332.9624 c461.1533 333.4873 460.8691 333.9023 460.4531 334.0664 cf*UUu*u0 D465.8555 327.5396 m465.8555 335.0723 L469.9551 335.0723 L469.8135 334.2085 L466.916 334.2085 L466.916 331.9126 L469.3428 331.9126 L469.3428 331.0273 L466.9268 331.0273 L466.9268 328.4468 L470.0762 328.4468 L470.0762 327.5396 L465.8555 327.5396 lf*UUu*u442.2051 314.4995 m441.6807 313.8438 440.9805 313.4829 439.668 313.4829 c437.7881 313.4829 L437.7881 321.0156 L439.5371 321.0156 L440.8389 321.0156 441.6689 320.7207 442.3584 319.7695 c442.8066 319.146 443.0254 318.2822 443.0254 317.2437 c443.0254 316.0195 442.708 315.123 442.2051 314.4995 cf1 D441.2979 319.5068 m440.8818 320.0317 440.4443 320.1738 439.7119 320.1738 c438.8594 320.1738 L438.8594 314.3467 L439.6904 314.3467 L440.5537 314.3467 441.1113 314.5762 441.4512 315.1885 c441.7236 315.6914 441.8555 316.3691 441.8555 317.1128 c441.8555 318.1621 441.7461 318.9385 441.2979 319.5068 cf*UUu*u0 D446.3418 313.4829 m446.3418 321.0156 L450.4414 321.0156 L450.2998 320.1519 L447.4023 320.1519 L447.4023 317.856 L449.8291 317.856 L449.8291 316.9707 L447.4131 316.9707 L447.4131 314.3901 L450.5625 314.3901 L450.5625 313.4829 L446.3418 313.4829 lf*UUu*u461.2148 313.603 m460.876 313.5156 460.417 313.4829 460.0234 313.4829 c457.7275 313.4829 L457.7275 321.0156 L459.3232 321.0156 L460.5918 321.0156 460.9307 320.9829 461.4014 320.7314 c462.0684 320.3818 462.418 319.8457 462.418 319.1572 c462.418 318.3701 461.9697 317.7686 461.0508 317.4951 c462.1885 317.2437 462.7354 316.5332 462.7354 315.5493 c462.7354 314.4995 462.0898 313.833 461.2148 313.603 cf1 D460.5479 320.0537 m460.373 320.1084 460.166 320.1299 459.7832 320.1299 c458.7549 320.1299 L458.7549 317.834 L459.9473 317.834 L460.6143 317.834 460.8438 317.9546 461.0625 318.2495 c461.2041 318.4463 461.2813 318.7305 461.2813 318.9824 c461.2813 319.5068 460.9854 319.9224 460.5479 320.0537 cf460.7666 316.894 m460.5703 316.9375 460.3516 316.9595 459.9795 316.9595 c458.7656 316.9595 L458.7656 314.3354 L460.2529 314.3354 L460.876 314.3354 461.5762 314.7075 461.5762 315.6694 c461.5762 316.2817 461.2373 316.7847 460.7666 316.894 cf*UUu*u0 D469.71 313.4829 m469.4912 313.9092 469.3936 314.084 469.0869 314.5981 c468.5078 315.5601 468.3213 315.8774 467.7861 316.4785 c467.5889 316.6973 467.4248 316.8066 467.1084 316.8174 c467.1084 313.4829 L466.0586 313.4829 L466.0586 321.0156 L468.1689 321.0156 L469.0654 321.0156 469.5898 320.8081 469.9512 320.4692 c470.29 320.1519 470.6182 319.6489 470.6182 318.9165 c470.6182 317.7466 469.8633 316.8066 468.6055 316.8501 c468.9561 316.5659 469.1309 316.3257 469.2617 316.1504 c469.415 315.9429 469.6445 315.6147 469.8965 315.2212 c470.2246 314.7075 470.8369 313.7236 470.9893 313.4829 C469.71 313.4829 lf1 D468.8135 320.0098 m468.5947 320.0972 468.2891 320.1519 467.8955 320.1519 c467.1084 320.1519 L467.1084 317.5283 L467.8408 317.5283 L468.5078 317.5283 468.8789 317.6372 469.1416 317.8887 c469.3711 318.1074 469.5137 318.4683 469.5137 318.9058 c469.5137 319.4307 469.2295 319.8457 468.8135 320.0098 cf*UUu*u0 D478.6123 314.248 m478.2295 313.7783 477.6064 313.3628 476.4473 313.3628 c475.3105 313.3628 474.5557 313.7236 474.1729 314.4121 c473.9766 314.7622 473.9326 314.9697 473.9326 315.7568 c473.9326 321.0156 L474.9932 321.0156 L474.9932 316.1504 L474.9932 315.604 475.0479 314.937 475.2666 314.6855 c475.4746 314.4448 475.8564 314.2593 476.458 314.2593 c477.0273 314.2593 477.4424 314.4341 477.6826 314.751 c477.8691 314.9917 477.9561 315.396 477.9561 315.9976 c477.9561 321.0156 L479.0059 321.0156 L479.0059 315.8442 l479.0059 314.8931 478.9512 314.6636 478.6123 314.248 cf*UUu*u486.2588 313.4829 m484.5635 316.7192 L482.9346 313.4829 L481.6553 313.4829 L483.9297 317.5391 L481.918 321.0156 L483.1963 321.0156 L484.5527 318.4575 L485.8428 321.0156 L487.1006 321.0156 L485.1973 317.6045 L487.5381 313.4829 L486.2588 313.4829 lf*UUu*u490.3682 313.4829 m490.3682 321.0156 L494.4678 321.0156 L494.3262 320.1519 L491.4287 320.1519 L491.4287 317.856 L493.8555 317.856 L493.8555 316.9707 L491.4395 316.9707 L491.4395 314.3901 L494.5889 314.3901 L494.5889 313.4829 L490.3682 313.4829 lf*UUu*u501.6191 313.4829 m497.8584 313.4829 L497.8584 321.0156 L498.9297 321.0156 L498.9297 314.3574 L501.7939 314.3574 L501.6191 313.4829 lf*UUu*u508.2793 313.4829 m504.5186 313.4829 L504.5186 321.0156 L505.5898 321.0156 L505.5898 314.3574 L508.4541 314.3574 L508.2793 313.4829 lf*UUu*u511.0449 313.4829 m511.0449 321.0156 L515.1445 321.0156 L515.0029 320.1519 L512.1055 320.1519 L512.1055 317.856 L514.5322 317.856 L514.5322 316.9707 L512.1162 316.9707 L512.1162 314.3901 L515.2656 314.3901 L515.2656 313.4829 L511.0449 313.4829 lf*UUu*u520.3594 313.3408 m519.4961 313.3408 518.665 313.5596 517.9326 314.0078 c518.3477 314.8169 L519.0039 314.4121 519.627 314.1934 520.3818 314.1934 c521.3662 314.1934 522.0107 314.6963 522.0107 315.5054 c522.0107 316.1177 521.6064 316.5439 520.7646 316.7847 c519.9775 317.0142 L518.8398 317.3423 518.1953 317.8887 518.1953 318.9604 c518.1953 320.2612 519.2012 321.147 520.6875 321.147 c521.5186 321.147 522.3281 320.9063 522.9951 320.436 c522.5244 319.6929 L521.8252 320.1191 521.3545 320.2832 520.7314 320.2832 c519.8896 320.2832 519.3652 319.8457 519.3652 319.146 c519.3652 318.6104 519.6709 318.3042 520.4805 318.064 c521.3662 317.8013 L522.3721 317.5063 523.2031 316.8501 523.2031 315.6807 c523.2031 314.6309 522.3389 313.3408 520.3594 313.3408 cf*UUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF